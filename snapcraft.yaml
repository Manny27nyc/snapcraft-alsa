name: alsa
version: '1.1.3'
summary: ALSA part for snapcraft
description: |
  ALSA part for snapcraft, which will compile ALSA and install a loader script
  which redirects audio through pulseaudio without requiring the `alsa` plug to
  be connected manually or by store assertion.

  In your snap's snapcraft.yaml add `after: [alsa]` to the part which will depend
  upon alsa, and add `alsa-launch` to your app's command. Remove any references
  to `libasound2-dev` and `libasound2` from build- and stage-packages. You also
  currently need to ensure the dependency chain by adding stub part definitions:

    apps:
      my-app:
        command: desktop-launch alsa-launch $SNAP/usr/bin/my-app
        plugs: [...]

    layout:
      /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib:
        bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib

    parts:
      alsa-mixin:
        plugin: nil
        source: https://github.com/diddlesnaps/snapcraft-alsa.git
        override-pull: |
          cat > asound.conf <<EOF
          pcm.!default {
              type pulse
              fallback "sysdefault"
              hint {
                  show on
                  description "Default ALSA Output (currently PulseAudio Sound Server)"
              }
          }
          ctl.!default {
              type pulse
              fallback "sysdefault"
          }
          EOF
          cat > alsa-launch <<EOF
          #!/bin/bash

          function append_dir() {
            local var="\$1"
            local dir="\$2"
            if [ -d "\$dir" ]; then
              eval "export \$var=\"\\\${\$var:+:\\\$\$var}\\\$dir\""
            fi
          }

          export ALSA_CONFIG_PATH="\$SNAP/etc/asound.conf"

          if [ -d "\$SNAP/usr/lib/alsa-lib" ]; then
              append_dir LD_LIBRARY_PATH "\$SNAP/usr/lib/alsa-lib"
          elif [ -d "\$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib" ]; then
              append_dir LD_LIBRARY_PATH "\$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib"
          fi
          append_dir LD_LIBRARY_PATH "\$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio"

          # Make PulseAudio socket available inside the snap-specific $XDG_RUNTIME_DIR
          if [ -n "\$XDG_RUNTIME_DIR" ]; then
              pulsenative="pulse/native"
              pulseaudio_sockpath="\$XDG_RUNTIME_DIR/../\$pulsenative"
              if [ -S "\$pulseaudio_sockpath" ]; then
                  export PULSE_SERVER="unix:\${pulseaudio_sockpath}"
              fi
          fi

          exec "\$@"
          EOF

          chmod +x alsa-launch
        override-build: |
          snapcraftctl build
          install -m644 -D -t $SNAPCRAFT_PART_INSTALL/etc asound.conf
          install -m755 -D -t $SNAPCRAFT_PART_INSTALL/snap/command-chain alsa-launch
        build-packages:
          - libasound2-dev
        stage-packages:
          - libasound2
          - libasound2-plugins

      # Your app here
      depends-on-alsa:
        after: [alsa-mixin, desktop-glib-only]
        plugin: nil
        source: ...
        ...

parts:
  alsa:
    plugin: nil
    source: https://github.com/diddlesnaps/snapcraft-alsa.git
    override-pull: |
      cat > asound.conf <<EOF
      pcm.!default {
          type pulse
          fallback "sysdefault"
          hint {
              show on
              description "Default ALSA Output (currently PulseAudio Sound Server)"
          }
      }
      ctl.!default {
          type pulse
          fallback "sysdefault"
      }
      EOF
      cat > alsa-launch <<EOF
      #!/bin/bash

      function append_dir() {
        local var="\$1"
        local dir="\$2"
        if [ -d "\$dir" ]; then
          eval "export \$var=\"\\\$dir\${\$var:+:\\\$\$var}\""
        fi
      }

      export ALSA_CONFIG_PATH="\$SNAP/etc/asound.conf"

      if [ -d "\$SNAP/usr/lib/alsa-lib" ]; then
          append_dir LD_LIBRARY_PATH "\$SNAP/usr/lib/alsa-lib"
      elif [ -d "\$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib" ]; then
          append_dir LD_LIBRARY_PATH "\$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib"
      fi
      append_dir LD_LIBRARY_PATH "\$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio"

      # Make PulseAudio socket available inside the snap-specific $XDG_RUNTIME_DIR
      if [ -n "\$XDG_RUNTIME_DIR" ]; then
          pulsenative="pulse/native"
          pulseaudio_sockpath="\$XDG_RUNTIME_DIR/../\$pulsenative"
          if [ -S "\$pulseaudio_sockpath" ]; then
              export PULSE_SERVER="unix:\${pulseaudio_sockpath}"
          fi
      fi

      exec "\$@"
      EOF
      chmod +x alsa-launch
    override-build: |
      snapcraftctl build
      install -m644 -D -t $SNAPCRAFT_PART_INSTALL/etc asound.conf
      install -m755 -D -t $SNAPCRAFT_PART_INSTALL/snap/command-chain alsa-launch
    build-packages:
      - libasound2-dev
    stage-packages:
      - libasound2
      - libasound2-plugins

