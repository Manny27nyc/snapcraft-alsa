#!/bin/bash

if [ -f "$SNAP/meta/gui/$SNAP_NAME.desktop" ]; then
  SNAP_READABLE_NAME="$(awk 'BEGIN { FS="=" }; /^Name=/ { print $2 }' "$SNAP/meta/gui/$SNAP_NAME.desktop")"
else
  SNAP_READABLE_NAME="$SNAP_NAME"
fi

popup() {
  TEXT="$SNAP_READABLE_NAME may have better audio device support if granted permission to access the ALSA audio system.

If you experience audio problems, you may wish to grant this access by using the Software Centre or the Snap Store to add the 'alsa' permission to $SNAP_READABLE_NAME. It is safe to continue without doing so.

You can also grant this permission by running the following command in a Terminal window:

<tt>sudo snap connect $SNAP_NAME:alsa</tt>

If you choose to continue and later wish to change your mind, you can remove the file <tt>$SNAP_USER_DATA/Always use PulseAudio</tt>.
"
PLAIN=$(sed 's/<[^>]*>//g' <<< $TEXT)
PLAINWRAPPED=$(echo -e "$PLAIN" | fold -w 70 -s -)

  if snapctl is-connected desktop; then
    yad --center \
        --title="Configuring $SNAP_READABLE_NAME audio system" \
        --text="$TEXT" \
        --button="Permission has been granted":255 \
        --button="Start and ask next time":1 \
        --button="Start and don't ask again":2 \
        --button=gtk-cancel:0 \
        --borders=12 \
        --image=audio-volume-high-symbolic \
        --width=100

    return $?
  elif [ $SHLVL -gt 1 ]; then
    echo "$PLAINWRAPPED"
    cat <<EOF

Type [p] to re-test after granting [p]ermission,
     [s] to [s]tart and not ask again,
     [a] to start and [a]sk again next time, or
     [c] to [c]ancel (default)

EOF

    read -n 1 -p "permission | start | ask | [cancel] > " response

    case $response in
      S|Start|s|start)
        return 2
        ;;
      P|p|Permission|permission|R|r|Retest|retest)
        return 255
        ;;
      A|Ask|a|ask)
        return 1
        ;;
      *)
        return 0
        ;;
    esac
  else
    return 0
  fi
}

setup_alsa_override() {
  if [ "$SNAP_ARCH" = "amd64" ]; then
    ALSA_ARCH_TRIPLET="x86_64-linux-gnu"
  elif [ "$SNAP_ARCH" = "armhf" ]; then
    ALSA_ARCH_TRIPLET="arm-linux-gnueabihf"
  elif [ "$SNAP_ARCH" = "arm64" ]; then
    ALSA_ARCH_TRIPLET="aarch64-linux-gnu"
  elif [ "$SNAP_ARCH" = "ppc64el" ]; then
    ALSA_ARCH_TRIPLET="powerpc64le-linux-gnu"
  else
    ALSA_ARCH_TRIPLET="$SNAP_ARCH-linux-gnu"
  fi

  export ALSA_CONFIG_PATH="$SNAP/etc/asound.conf"

  if [ -d "$SNAP/usr/lib/alsa-lib" ]; then
      export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$SNAP/usr/lib/alsa-lib"
  elif [ -d "$SNAP/usr/lib/$ALSA_ARCH_TRIPLET/alsa-lib" ]; then
      export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$SNAP/usr/lib/$ALSA_ARCH_TRIPLET/alsa-lib"
  fi
  export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$SNAP/usr/lib/$ALSA_ARCH_TRIPLET/pulseaudio"

  # Make PulseAudio socket available inside the snap-specific $XDG_RUNTIME_DIR
  if [ -n "$XDG_RUNTIME_DIR" ]; then
    pulsenative="pulse/native"
    pulseaudio_sockpath="$XDG_RUNTIME_DIR/../$pulsenative"
    if [ -S "$pulseaudio_sockpath" ]; then
      export PULSE_SERVER="unix:${pulseaudio_sockpath}"
    fi
  fi
}

if [ -f "$SNAP_USER_DATA/.snapcraft-alsa" ]; then
  mv "$SNAP_USER_DATA/.snapcraft-alsa" "$SNAP_USER_DATA/Always use PulseAudio"
fi
if [ -f "$SNAP_USER_DATA/Always use PulseAudio" ]; then
  . "$SNAP_USER_DATA/Always use PulseAudio"
fi

if [ -n "$ALWAYS_USE_PULSEAUDIO" ] && [ "$ALWAYS_USE_PULSEAUDIO" -eq 1 ]; then

  echo "Routing ALSA through PulseAudio"
  setup_alsa_override

else

  if ! env LANG=C snapctl is-connected alsa 2>&1 | grep -q 'has no plug or slot named "alsa"'; then
    ret=255
    while [ $ret = 255 ] && ! snapctl is-connected alsa; do
      popup
      ret=$?
      if [ $ret = 255 ]; then
        echo "Retesting permissions..."
      fi
    done

    case $ret in
      1)
        echo "Setting ALSA to always route through PulseAudio"
        echo "ALWAYS_USE_PULSEAUDIO=1" > "$SNAP_USER_DATA/Always use PulseAudio"
        setup_alsa_override
        ;;
      2)
        echo "Trying to route ALSA through PulseAudio..."
        setup_alsa_override
        ;;
      *)
        echo "Cancelling execution..."
        exit 1
        ;;
    esac
  fi
fi

exec "$@"
