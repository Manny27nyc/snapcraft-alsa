#!/bin/sh

if [ -f "$SNAP/meta/gui/$SNAP_NAME.desktop" ]; then
  SNAP_READABLE_NAME="$(awk 'BEGIN { FS="=" }; /^Name=/ { print $2 }' "$SNAP/meta/gui/$SNAP_NAME.desktop")"
else
  SNAP_READABLE_NAME="$SNAP_NAME"
fi

popup() {
  TEXT="$SNAP_READABLE_NAME requires access to the ALSA system.

You need grant the ALSA permission to the Snap Package by running the following
command in a terminal, or use the Snap Store or Software Centre app to grant the
permission.

You can also try to use Pulseaudio instead but this may lead to strange issues.

    $ sudo snap connect $SNAP_NAME:alsa
"
  if snapctl is-connected desktop; then
    yad --center \
        --title="$SNAP_READABLE_NAME cannot access ALSA" \
        --text="$TEXT" \
        --button="Retest":255 \
        --button="Always Use PulseAudio":2
        --button="Use PulseAudio This Time":1 \
        --button="Cancel":0
    return $?
  elif [ $SHLVL -gt 1 ]; then
    echo <<EOF
$TEXT

Type r to retest,
Type p to Use PulseAudio this time
Type a to Always use PulseAudio, or
Type c to Cancel (default):

EOF
    read -n 1 -p "retest|pulseaudio|always|[cancel]? " response
    case response in
      R|Retest|r|retest)
        return 255
        ;;
      A|Always|a|always)
        return 2
        ;;
      P|Pulseaudio|PulseAudio|p|pulseaudio)
        return 1
        ;;
      *)
        return 0
        ;;
    esac
  else
    return 0
  fi
}

setup_alsa_override() {
  if [ "$SNAP_ARCH" = "amd64" ]; then
    ALSA_ARCH_TRIPLET="x86_64-linux-gnu"
  elif [ "$SNAP_ARCH" = "armhf" ]; then
    ALSA_ARCH_TRIPLET="arm-linux-gnueabihf"
  elif [ "$SNAP_ARCH" = "arm64" ]; then
    ALSA_ARCH_TRIPLET="aarch64-linux-gnu"
  elif [ "$SNAP_ARCH" = "ppc64el" ]; then
    ALSA_ARCH_TRIPLET="powerpc64le-linux-gnu"
  else
    ALSA_ARCH_TRIPLET="$SNAP_ARCH-linux-gnu"
  fi

  export ALSA_CONFIG_PATH="$SNAP/etc/asound.conf"

  if [ -d "$SNAP/usr/lib/alsa-lib" ]; then
      export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$SNAP/usr/lib/alsa-lib"
  elif [ -d "$SNAP/usr/lib/$ALSA_ARCH_TRIPLET/alsa-lib" ]; then
      export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$SNAP/usr/lib/$ALSA_ARCH_TRIPLET/alsa-lib"
  fi
  export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$SNAP/usr/lib/$ALSA_ARCH_TRIPLET/pulseaudio"

  # Make PulseAudio socket available inside the snap-specific $XDG_RUNTIME_DIR
  if [ -n "$XDG_RUNTIME_DIR" ]; then
    pulsenative="pulse/native"
    pulseaudio_sockpath="$XDG_RUNTIME_DIR/../$pulsenative"
    if [ -S "$pulseaudio_sockpath" ]; then
      export PULSE_SERVER="unix:${pulseaudio_sockpath}"
    fi
  fi
}

if [ -f "$SNAP_USER_DATA/.snapcraft-alsa" ]; then
  . "$SNAP_USER_DATA/.snapcraft-alsa"
fi

if [ -n "$ALWAYS_USE_PULSEAUDIO" ] && [ "$ALWAYS_USE_PULSEAUDIO" -eq 1 ]; then

  echo "Routing ALSA through PulseAudio"
  setup_alsa_override

else

  if ! env LANG=C snapctl is-connected alsa 2>&1 | grep 'has no plug or slot named "alsa"' >/dev/null; then
    ret=2
    while [ $ret = 255 ] && ! snapctl is-connected alsa; do
      popup
      ret=$?
      if [ $ret = 255 ]; then
        echo "Retesting permissions..."
      fi
    done

    case $ret in
      1)
        echo "Setting ALSA to always route through PulseAudio"
        echo "ALWAYS_USE_PULSEAUDIO=1" > "$SNAP_USER_DATA/.snapcraft-alsa"
        setup_alsa_override
        ;;
      2)
        echo "Trying to route ALSA through PulseAudio..."
        setup_alsa_override
        ;;
      *)
        echo "Cancelling execution..."
        exit 1
        ;;
    esac
  fi
fi

exec "$@"
